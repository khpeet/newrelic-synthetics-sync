name: New Relic Synthetics

on:
  push:
    branches:
      - main

jobs:
  sync_synthetic_monitors:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Changed Scripts
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/*.js
          json: "true"

      - name: Extract File Names
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "${{steps.changed-files.outputs.all_changed_files}}"
          echo "${{steps.changed-files.outputs.all_changed_files}}" | jq -r '.[]'
          changed_files=$(echo "${{steps.changed-files.outputs.all_changed_files}}" | jq -r '.[]')
          filenames=()
          for file in $changed_files; do
            basefile=$(basename "$basefile")
            filename=$(echo "$basefile" | xargs)
            jsname=${filename%%.js}
            echo $jsname
            filenames+=("$jsname")
          done
          echo $filenames

    # - name: Call New Relic Entity Search GraphQL API
    #   if: steps.get-changed-scripts.outputs.any_changed == 'true'
    #   env:
    #     NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }} # Add your New Relic API key as a secret in your GitHub repository
    #   id: search_entities
    #   run: |
    #     FILE_NAMES="${{ steps.extract-files.outputs.names }}"
    #
    #     # Split file names into an array
    #     IFS=$'\n' read -rd '' -a FILE_NAME_ARRAY <<<"$FILE_NAMES"
    #
    #     ENTITY_DATA=""
    #     for i in "${!FILE_NAME_ARRAY[@]}"; do
    #       FILE_NAME="${FILE_NAME_ARRAY[$i]}"
    #
    #       # Make API request to search for New Relic entity with the same name as the file and filtering to domain:SYNTH
    #       RESPONSE=$(curl -s -X POST 'https://api.newrelic.com/graphql' \
    #       -H "Content-Type: application/json" \
    #       -H "API-Key: $NEW_RELIC_API_KEY" \
    #       -d '{"query":"query SearchEntities($searchQuery: String!) { actor { entitySearch(query: $searchQuery) { count results { entities { name domain guid } } } } } }","variables":{"searchQuery":"name:'"$FILE_NAME"' domain:SYNTH"}}')
    #
    #       # Check if API request was successful and entity with the same name as the file exists
    #       if [[ $RESPONSE == *"\"name\": \"$FILE_NAME\""* ]]; then
    #         # Extract guid from API response
    #         GUID=$(echo "$RESPONSE" | jq -r '.data.actor.entitySearch.results.entities[0].guid')
    #         ENTITY_DATA+="$FILE_NAME:$GUID\n"
    #       else
    #         echo "No New Relic entity with the name $FILE_NAME found."
    #       fi
    #     done
    #     echo "::set-output name=entities::$ENTITY_DATA"

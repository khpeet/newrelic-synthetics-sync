name: Search for New Relic Entities

on:
  push:
    branches:
      - main

jobs:
  search_for_entities:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get changed files
      uses: tj-actions/changed-files@v2
      with:
        output-format: string
        file-extension: '.js'
      id: get_changed_files

    - name: Check if any JavaScript files changed
      run: |
        CHANGED_FILES="${{ steps.get_changed_files.outputs.files }}"
        if [ -z "$CHANGED_FILES" ]; then
          echo "No JavaScript files changed."
          exit 0
        fi

    - name: Extract file names and contents
      id: extract_files
      run: |
        CHANGED_FILES="${{ steps.get_changed_files.outputs.files }}"
        while read -r FILE; do
          FILE_NAME=$(basename -- "$FILE")
          FILE_CONTENTS=$(cat "$FILE")
          echo "::set-output name=names::$FILE_NAME"
          echo "::set-output name=contents::$FILE_CONTENTS"
        done <<< "$CHANGED_FILES"

    - name: Call New Relic Entity Search GraphQL API
      env:
        NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }} # Add your New Relic API key as a secret in your GitHub repository
      run: |
        FILE_NAMES="${{ steps.extract_files.outputs.names }}"
        FILE_CONTENTS="${{ steps.extract_files.outputs.contents }}"

        # Split file names and contents into arrays
        IFS=$'\n' read -rd '' -a FILE_NAME_ARRAY <<<"$FILE_NAMES"
        IFS=$'\n' read -rd '' -a FILE_CONTENTS_ARRAY <<<"$FILE_CONTENTS"

        # Iterate over file names and contents to make API requests to search for New Relic entities
        for i in "${!FILE_NAME_ARRAY[@]}"; do
          FILE_NAME="${FILE_NAME_ARRAY[$i]}"
          FILE_CONTENTS="${FILE_CONTENTS_ARRAY[$i]}"

          # Make API request to search for New Relic entity with the same name as the file and filtering to domain:SYNTH
          RESPONSE=$(curl -X POST 'https://api.newrelic.com/graphql' \
          -H "Content-Type: application/json" \
          -H "API-Key: $NEW_RELIC_API_KEY" \
          -d '{"query":"query SearchEntities($searchQuery: String!) { actor { entitySearch(query: $searchQuery) { count results { entities { name domain } } } } } }","variables":{"searchQuery":"name:'"$FILE_NAME"' domain:SYNTH"}}')

          # Check if API request was successful and entity with the same name as the file exists
          if [[ $RESPONSE == *"\"name\": \"$FILE_NAME\""* ]]; then
            echo "Found New Relic entity with the name $FILE_NAME."
            # Add code to update the entity with the new file contents
          else
            echo "No New Relic entity with the name $FILE_NAME found."
          fi
        done
